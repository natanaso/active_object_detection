
<launch>
	<!-- octomap node -->
	<node name="environment_server" pkg="planning_environment" type="environment_server" />
	<node name="octomap_server_combined" pkg="octomap_server" 
			 type="octomap_server_node"  output="screen">
		<param name="resolution" value="0.025" /> 
		<param name="sensor_model/max_range" value="4.0" />

		<param name="sensor_model/hit" value= "0.8" />
		<param name="sensor_model/miss" value= "0.31" />
		<param name="sensor_model/min" value= "0.12" />
		<param name="sensor_model/max" value= "0.95" />

		<param name="pointcloud_min_z" value="-0.03" />
		<param name="pointcloud_max_z" value="2.0" />
		<param name="occupancy_min_z" value="0.05" />
		<param name="occupancy_max_z" value="2.0" />

		<param name="filter_ground" value="True" />
		<param name="filter_speckles" value="True" />
		<param name="ground_filter/distance" value="0.10" />
		<param name="ground_filter/angle" value="0.15" />
		<param name="ground_filter/plane_distance" value="0.07" />


		<param name="min_x_size" value="25.0" />
		<param name="min_y_size" value="25.0" />

		<remap from="cloud_in" to="/narrow_stereo_textured/points2_filtered" />
	</node>	

	<!-- Tuck the arms -->
	<!-- rosrun pr2_tuckarm tuck_arms.py b -->
	<!-- roslaunch pr2_tuckarm tuck_arms.launch 
	<include file="$(find pr2_tuckarm)/launch/tuck_arms.launch" />
	-->
	
	<!-- Run rviz on basestation -->
	<!-- rosrun rviz rviz `rospack find gazebo_simulation`/rviz_cfg/3d_map_build.vcg 
	<node name="rviz1" pkg="rviz" type="rviz" args="-d $(find gazebo_simulation)/rviz_cfg/3d_map_build.vcg"/>
	-->
	
	<!-- Erase unwanted points -->
	<!-- rosrun octomap_server octomap_eraser_cli.py min_x min_y min_z max_x max_y max_z -->
	<!-- once done save the map as follows: -->
	<!-- rosrun octomap_server octomap_saver map.bt -->
	
	
</launch>
